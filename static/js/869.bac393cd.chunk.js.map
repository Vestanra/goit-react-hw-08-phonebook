{"version":3,"file":"static/js/869.bac393cd.chunk.js","mappings":"iUAOaA,EAAe,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,MAAdD,UAEFE,EAAeC,EAAAA,KAAaC,MAAM,CACpCC,KAAMF,EAAAA,KACDG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdC,MAAON,EAAAA,KACFK,SAAS,YACdE,SAAUP,EAAAA,KACLG,IAAI,EAAG,cACPE,SAAS,cAElB,OACI,SAAC,IAAD,CAAMG,GAAiB,SAAbX,EAAoB,WAAW,WAAYY,MAAM,SAASC,QAAQ,SAASC,EAAE,QAAvF,UACI,SAAC,KAAD,CAAKH,GAAiB,SAAbX,EAAoB,WAAW,WAAYe,EAAG,EAAGC,QAAQ,KAAlE,UACI,SAAC,KAAD,CACIC,cACI,CACIZ,KAAM,GACNI,MAAO,GACPC,SAAU,IAGlBQ,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAOC,GACdvB,GAASwB,EAAAA,EAAAA,IAASF,IAClBC,EAAOE,WACV,EAZL,UAcI,SAAC,KAAD,WACI,UAAC,IAAD,CAAQC,QAAS,EAAGZ,MAAM,aAA1B,WACI,UAAC,KAAD,YACI,SAAC,IAAD,CAAWa,QAAQ,OAAnB,SAA2B,UAC3B,SAAC,KAAD,CAAOC,KAAK,OAAOrB,KAAK,OAAOsB,GAAG,OAAOC,GAAIC,EAAAA,EAAOC,QAAQ,SAASnB,GAAiB,SAAbX,EAAoB,WAAW,aACxG,SAAC,IAAD,CAAW+B,UAAU,OAAO1B,KAAK,aAErC,UAAC,KAAD,YACI,SAAC,IAAD,CAAWoB,QAAQ,QAAnB,SAA2B,WAC3B,SAAC,KAAD,CAAOC,KAAK,QAAQrB,KAAK,QAAQsB,GAAG,QAAQC,GAAIC,EAAAA,EAAOC,QAAQ,SAASnB,GAAiB,SAAbX,EAAoB,WAAW,aAC3G,SAAC,IAAD,CAAW+B,UAAU,OAAO1B,KAAK,cAErC,UAAC,KAAD,YACI,SAAC,IAAD,CAAWoB,QAAQ,WAAnB,SAA8B,cAC9B,SAAC,KAAD,CAAOC,KAAK,WAAWrB,KAAK,WAAWsB,GAAG,WAAWC,GAAIC,EAAAA,EAAOC,QAAQ,SAASnB,GAAiB,SAAbX,EAAoB,WAAW,aACpH,SAAC,IAAD,CAAW+B,UAAU,OAAO1B,KAAK,iBAErC,SAAC,IAAD,CAAQqB,KAAK,SAASM,YAAY,OAAOrB,GAAiB,SAAbX,EAAoB,WAAW,WAAYiC,MAAM,OAA9F,SAAqG,uBAOhI,ECvDD,EANiB,WACb,OAAQ,0BACJ,SAACpC,EAAD,KAEP,C","sources":["components/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { Box, Button, Flex, FormControl, FormLabel, VStack, Input, useColorMode } from \"@chakra-ui/react\";\nimport { Field, Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/authOperations\";\nimport { ErrorText } from \"./styled/styled\";\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n    const { colorMode } = useColorMode();\n\n    const SignupSchema = Yup.object().shape({\n        name: Yup.string()\n            .min(1, 'Too Short!')\n            .max(20, 'Too Long!')\n            .required('Required'),\n        email: Yup.string()\n            .required('Required'),\n        password: Yup.string()\n            .min(7, 'Too Short!')\n            .required('Required'),\n    });\n    return (\n        <Flex bg={colorMode ==='dark'?\"gray.600\":\"gray.200\"} align=\"center\" justify=\"center\" h=\"100vh\">\n            <Box bg={colorMode ==='dark'?\"gray.400\":\"gray.100\"} p={6} rounded=\"md\" >\n                <Formik\n                    initialValues={\n                        {\n                            name: '',\n                            email: '',\n                            password: '',\n                        }\n                    }\n                    validationSchema={SignupSchema}\n                    onSubmit={(value, action) => {\n                        dispatch(register(value));\n                        action.resetForm();\n                    }}\n                >\n                    <Form>\n                        <VStack spacing={4} align=\"flex-start\">\n                            <FormControl>\n                                <FormLabel htmlFor=\"name\" >Name</FormLabel>\n                                <Field type=\"text\" name=\"name\" id=\"name\" as={Input} variant=\"filled\" bg={colorMode ==='dark'?\"gray.300\":\"gray.50\"}/>\n                                <ErrorText component=\"span\" name=\"name\" />\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel htmlFor=\"email\">Email</FormLabel>\n                                <Field type=\"email\" name=\"email\" id=\"email\" as={Input} variant=\"filled\" bg={colorMode ==='dark'?\"gray.300\":\"gray.50\"}/>\n                                <ErrorText component=\"span\" name=\"email\" />\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel htmlFor=\"password\">Password</FormLabel>\n                                <Field type=\"password\" name=\"password\" id=\"password\" as={Input} variant=\"filled\" bg={colorMode ==='dark'?\"gray.300\":\"gray.50\"}/>\n                                <ErrorText component=\"span\" name=\"password\" />\n                            </FormControl>\n                            <Button type=\"submit\" colorScheme=\"blue\" bg={colorMode ==='dark'?\"blue.600\":\"blue.700\"} width=\"full\">Register</Button>\n                        </VStack>\n                    </Form>\n                </Formik>\n            </Box>\n        </Flex>\n    )\n};","import { RegisterForm } from \"components/RegisterForm\";\n\nconst Register = () => {\n    return (<div>\n        <RegisterForm/>\n    </div>)\n};\n\nexport default Register;"],"names":["RegisterForm","dispatch","useDispatch","colorMode","useColorMode","SignupSchema","Yup","shape","name","min","max","required","email","password","bg","align","justify","h","p","rounded","initialValues","validationSchema","onSubmit","value","action","register","resetForm","spacing","htmlFor","type","id","as","Input","variant","component","colorScheme","width"],"sourceRoot":""}